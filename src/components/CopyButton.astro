---
interface Props {
  clipboardText: string;
}
const { clipboardText } = Astro.props;
---

<button
  class="content-button top-content-button"
  id="copy-button"
  data-clipboard-text={clipboardText}
>
  <div class="row-container">
    <img id="copy-icon" src="/copy.svg" />
    <div id="button-text">リンクをコピー</div>
  </div>
</button>

<style>
  button {
    line-height: 2;
    border: none;
    font-size: 1rem;
    font-weight: 400;
    cursor: pointer;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', (_) => {
    const copyButton = document.getElementById('copy-button');
    const copyIcon = document.getElementById('copy-icon') as HTMLImageElement;
    const buttonText = document.getElementById('button-text');
    if (copyButton === null || buttonText === null || copyIcon === null) {
      throw new Error('copyButton, buttonText, or copyIcon is not found');
    }

    copyButton.addEventListener('click', () => {
      const clipText = copyButton.getAttribute('data-clipboard-text');
      if (clipText) {
        navigator.clipboard
          .writeText(clipText)
          .then(() => {
            copyIcon.src = '/done.svg';
            buttonText.textContent = 'コピーしました';

            setTimeout(() => {
              copyIcon.src = '/copy.svg';
              buttonText.textContent = 'リンクをコピー';
            }, 3000); // 3秒後
          })
          .catch((err) => {
            console.error('Error in copying text: ', err);
          });
      }
    });
  });
</script>
